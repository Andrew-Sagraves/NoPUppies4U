#!/bin/bash
#DO NOT RUN ON YOUR OWN MACHINE
#INTENDED ONLY FOR TEST VIRTUAL MACHINES
#WILL INTRODUCE DANGEROUS VULNERABILITIES INTO YOUR MACHINE!

echo "Creating PATH vulnerabilities..."
mkdir -p /tmp/malicious_bin
chmod 777 /tmp/malicious_bin
echo '#!/bin/bash
echo "Malicious command"
exit 1' > /tmp/malicious_bin/ls
chmod +x /tmp/malicious_bin/ls
#add to front of path so it goes before your other commands
echo 'export PATH="/tmp/malicious_bin:$PATH"' >> /etc/environment

echo "Creating world-writable directory..."
mkdir -p /usr/local/insecure_bin
chmod 777 /usr/local/insecure_bin

#create insecure users
echo "Creating password vulnerabilities..."
useradd -m -s /bin/bash emptyuser
usermod -p '' emptyuser
useradd -m -s /bin/bash lockeduser
usermod -p '!' lockeduser
useradd -m -s /bin/bash nopassuser
usermod -p '*' nopassuser

echo "Adding fake package sources..."
echo "# FAKE SOURCE" >> /etc/apt/sources.list
echo "deb http://fakerepo.com/ubuntu/ focal main" >> /etc/apt/sources.list
#this is for newer ubuntu versions
echo "Types: deb
URIs: http://fakerepo.com/ubuntu/
Suites: focal
Components: main" > /etc/apt/sources.list.d/fakerepo.sources

echo "Adding users to sudo group..."
usermod -aG sudo emptyuser
usermod -aG sudo testuser

echo "Creating vulnerable cron jobs..."
echo '#!/bin/bash
echo "Vulnerable cron job"' > /etc/cron.hourly/insecure-cron
chmod 666 /etc/cron.hourly/insecure-cron

echo '#!/bin/bash
echo "Vulnerable script from cron"' > /tmp/cron-job.sh
chmod 666 /tmp/cron-job.sh

echo "Creating world-writable files..."
touch /usr/local/bin/world-writable
chmod 666 /usr/local/bin/world-writable

touch /bin/.hidden-vulnerable
chmod 666 /bin/.hidden-vulnerable

echo "Creating duplicate executables..."
cp /bin/ls /tmp/malicious_bin/ls-duplicate
cp /bin/cat /usr/local/insecure_bin/cat
cp /bin/echo /tmp/echo

echo "Disabling UFW..."
ufw disable 2>/dev/null || true

#not fully certain on how this works. found in research about how apt checks if packages are up to date 
echo "Creating outdated packages..."
touch /var/lib/apt/periodic/update-success-stamp
find /var/lib/apt/lists -type f -delete 2>/dev/null || true

#using aforementioned created user 
echo "Creating weak SSH keys..."
mkdir -p /home/emptyuser/.ssh
ssh-keygen -t rsa -b 1024 -f /home/emptyuser/.ssh/id_rsa -N "" -q
chmod 777 /home/emptyuser/.ssh
chmod 666 /home/emptyuser/.ssh/id_rsa

echo "Vulnerability creation complete."
